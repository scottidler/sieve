name: Deploy Work Gmail Sieve

on:
  push:
    branches: [main]
    paths:
      - 'src/**'
      - 'configs/work-config.yml'
      - '.github/workflows/deploy-work.yml'
      - 'package.json'
      - 'tsconfig.json'
      - 'appsscript.json'
  workflow_dispatch:

jobs:
  deploy-work:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: '18'

      - name: Install dependencies
        run: npm install

      - name: Build TypeScript
        run: npm run build

      - name: Embed configuration
        run: |
          echo "Embedding configuration..."
          # Install js-yaml to convert YAML to JSON
          npm install js-yaml
          # Convert YAML config to JavaScript constant
          node -e "
            const yaml = require('js-yaml');
            const fs = require('fs');
            const config = yaml.load(fs.readFileSync('configs/work-config.yml', 'utf8'));
            const jsContent = 'const SIEVE_CONFIG = ' + JSON.stringify(config, null, 2) + ';';
            fs.writeFileSync('dist/config-embed.js', jsContent);
            console.log('Configuration embedded successfully');
          "

            - name: Install clasp globally
        run: npm install -g @google/clasp

      - name: Setup clasp authentication
        run: |
          echo "Setting up clasp authentication..."
          echo '${{ secrets.SIEVE_CLASP_TOKEN_WORK }}' | base64 -d > ~/.clasprc.json
          
      - name: Validate .clasprc.json
        run: jq . ~/.clasprc.json

      - name: Create clasp config
        run: |
          echo '{"scriptId":"${{ secrets.SIEVE_WORK_SCRIPT_ID }}","rootDir":"./dist"}' > .clasp.json

      - name: Push to Google Apps Script
        run: |
          echo "Pushing to Work Apps Script..."
          clasp push --force

      - name: Deploy new version
        run: |
          echo "Deploying new version..."
          clasp deploy --description "Deploy $(date '+%Y-%m-%d %H:%M:%S')"

      - name: Test deployment
        run: |
          echo "Testing deployment..."
          clasp run --function testDeployment
        continue-on-error: true

      - name: Notify success
        if: success()
        run: |
          echo "âœ… Work Sieve deployment successful!"
          echo "ðŸ“§ Account: scott.idler@tatari.tv"
          echo "ðŸ†” Script ID: ${{ secrets.SIEVE_WORK_SCRIPT_ID }}"
